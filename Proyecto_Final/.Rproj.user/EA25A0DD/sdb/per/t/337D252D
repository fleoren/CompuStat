{
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\n#install.packages('mclust')\nlibrary(mclust)      \n#install.packages(\"devtools\")\nlibrary(\"devtools\")\n#install_github(repo = \"bryanhanson/ChemoSpec@master\")\nlibrary(\"ChemoSpec\")\n#install.packages(\"car\")\nlibrary(car)\n#install.packages(\"scatterplot3d\")\nlibrary(\"scatterplot3d\")\n\nshinyServer(function(input, output) {\n  \n  #TODO ESTO DEBE SER BORRADO CUANDO FUNCIONE UPLOADFILE\n  #x1 = rnorm(n=20, mean=1, sd=1)   # get 20 normal distributed points for x axis with mean=1 and std=1 (1st class)\n  #y1 = rnorm(n=20, mean=1, sd=1)   # get 20 normal distributed points for x axis with mean=1 and std=1 (1st class)\n  #z1 = rnorm(n=20, mean=1, sd=1)   # get 20 normal distributed points for x axis with mean=1 and std=1 (1st class)\n  #x2 = rnorm(n=20, mean=5, sd=1)   # get 20 normal distributed points for x axis with mean=5 and std=1 (2nd class)\n  #y2 = rnorm(n=20, mean=5, sd=1)   # get 20 normal distributed points for x axis with mean=5 and std=1 (2nd class)\n  #z2 = rnorm(n=20, mean=5, sd=1)   # get 20 normal distributed points for x axis with mean=5 and std=1 (2nd class)\n  #x3 = rnorm(n=20, mean=-2, sd=1)   # get 20 normal distributed points for x axis with mean=5 and std=1 (2nd class)\n  #y3 = rnorm(n=20, mean=-2, sd=1)   # get 20 normal distributed points for x axis with mean=5 and std=1 (2nd class)\n  #z3 = rnorm(n=20, mean=-2, sd=1)   # get 20 normal distributed points for x axis with mean=5 and std=1 (2nd class)\n  #mix = matrix(nrow=60, ncol=3)    # create a dataframe matrix \n  #mix[,1] = c(x1, x2, x3)              # insert first class points into the matrix\n  #mix[,2] = c(y1, y2, y3)              # insert second class points into the matrix\n  #mix[,3] = c(z1, z2 ,z3)              # insert third class points into the matrix\n\n  output$clustPlot <- renderPlot({\n\n    inFile <- input$file1\n    \n    if (is.null(inFile))\n      return(NULL) # si no han seleccionado archivo no hacer nada\n    \n    datos <- read.csv(inFile$datapath, header = input$header,\n                      sep = input$sep, quote = input$quote)\n    \n    mix<-as.matrix(datos)\n    # generate the clustering model\n    mixclust = Mclust(mix)           # initialize EM with hierarchical clustering, execute BIC and EM\n    #add classification as a variable, then use as data frame for easy plotting\n    mix<-cbind(mixclust$classification,mix)\n    mix_df<-as.data.frame(mix)\n    \n    #partir colors en K (num clusters)\n    a <- rainbow(201)\n    b <- a[seq(1, length(a), 201/mixclust$G)]\n    #colors <- sample(rainbow(201), size=mixclust$G, replace = FALSE) this made it random\n    colors <- b[as.numeric(mix_df$V1)] #for coloring clusters\n    scatterplot3d(mix_df[1:3], pch = 16, color=colors,main=\"Clusters Encontrados\",\n                  col.axis=\"grey\") #yay plot\n\n  })\n\n})\n",
    "created" : 1450205232234.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2433015097",
    "id" : "337D252D",
    "lastKnownWriteTime" : 1450212067,
    "path" : "~/Dropbox/batmelon/EstadÃ­stica Computacional/CompuStat/CompuStat/Proyecto_Final/server.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}